# Generated by Django 2.0.6 on 2018-06-02 04:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
            ],
        ),
        migrations.CreateModel(
            name='BattleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typos', models.IntegerField(default=0)),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='battles.Battle')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(verbose_name='create date')),
                ('api_id', models.CharField(max_length=200)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='battles.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='battletag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='battles.Tag'),
        ),
        migrations.AddField(
            model_name='battle',
            name='tags',
            field=models.ManyToManyField(through='battles.BattleTag', to='battles.Tag'),
        ),
    ]
